import os
import sys
import subprocess
import logging
import locale
from datetime import datetime

# --- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ ---
APP_VERSION = "0.4.0-dev"

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–≥–≥–µ—Ä
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
BACKEND_DIR = os.path.join(PROJECT_ROOT, 'src')
LOG_DIR = os.path.join(PROJECT_ROOT, 'logs')
LOG_PATH = os.path.join(LOG_DIR, 'app.log')

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —Ñ–∞–π–ª –∏ –≤ –∫–æ–Ω—Å–æ–ª—å
logger = logging.getLogger()
logger.setLevel(logging.INFO)
# –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
if logger.hasHandlers():
    logger.handlers.clear()

formatter = logging.Formatter('[%(asctime)s] [%(levelname)s] %(message)s', datefmt='%Y-%m-%d %H:%M:%S')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
file_handler = logging.FileHandler(LOG_PATH, mode='a', encoding='utf-8')
file_handler.setFormatter(formatter)
logger.addHandler(file_handler)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É stdout –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Windows
if sys.stdout.encoding != 'utf-8':
    try:
        sys.stdout.reconfigure(encoding='utf-8')
    except TypeError: # –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ä–µ–¥–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ VSCode) —ç—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É
        pass
console_handler = logging.StreamHandler(sys.stdout)
console_handler.setFormatter(formatter)
logger.addHandler(console_handler)
# --- –ö–æ–Ω–µ—Ü –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É –±—ç–∫–µ–Ω–¥–∞ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—É—Ç—å, —á—Ç–æ–±—ã Python –º–æ–≥ –Ω–∞–π—Ç–∏ –º–æ–¥—É–ª–∏
sys.path.append(BACKEND_DIR)

def run_script(script_name: str):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π Python-—Å–∫—Ä–∏–ø—Ç –∏–∑ –ø–∞–ø–∫–∏ –±—ç–∫–µ–Ω–¥–∞."""
    script_path = os.path.join(BACKEND_DIR, script_name)
    logging.info(f"–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞: {script_name}...")
    
    try:
        result = subprocess.run(
            [sys.executable, script_path],
            capture_output=True,
            text=True,
            check=False,  # –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ, –∞ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é
            encoding='utf-8', # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º UTF-8
            errors='replace', # –ó–∞–º–µ–Ω—è—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
            cwd=PROJECT_ROOT  # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
        )

        # –õ–æ–≥–∏—Ä—É–µ–º stdout
        if result.stdout:
            logging.info(f"–í—ã–≤–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞ '{script_name}':\n{result.stdout}")

        # –õ–æ–≥–∏—Ä—É–µ–º stderr
        if result.stderr:
            logging.warning(f"–û—à–∏–±–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ '{script_name}':\n{result.stderr}")
        
        if result.returncode == 0:
            logging.info(f"–°–∫—Ä–∏–ø—Ç {script_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω.")
        else:
            logging.error(f"–°–∫—Ä–∏–ø—Ç {script_name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏: {result.returncode}")

    except FileNotFoundError:
        logging.error(f"–û—à–∏–±–∫–∞: –°–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏ {script_path}")
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ {script_name}: {e}")

def main():
    logging.info("--- üöÄ –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã HPI ---")
    
    # –®–∞–≥ 1: –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –º–µ—Ç—Ä–∏–∫ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
    run_script('calculator.py')
    
    # –®–∞–≥ 2: –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∂–µ–∫—Ç–æ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è PRO-–¥–∞—à–±–æ—Ä–¥–∞
    # –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º
    run_script('ai_dashboard_injector.py')

    logging.info("--- ‚úÖ –°–∏—Å—Ç–µ–º–∞ HPI –∑–∞–≤–µ—Ä—à–∏–ª–∞ —Ä–∞–±–æ—Ç—É ---")

if __name__ == "__main__":
    main() 