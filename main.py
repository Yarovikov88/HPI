import os
import sys
import logging
from datetime import datetime

# --- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ ---
APP_VERSION = "0.4.0"

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
LOG_DIR = os.path.join(PROJECT_ROOT, 'logs')
LOG_PATH = os.path.join(LOG_DIR, 'app.log')
BACKEND_DIR = os.path.join(PROJECT_ROOT, 'src')

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É —Å –º–æ–¥—É–ª—è–º–∏ –≤ sys.path
if PROJECT_ROOT not in sys.path:
    sys.path.append(PROJECT_ROOT)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger()
logger.setLevel(logging.INFO)
if logger.hasHandlers():
    logger.handlers.clear()

formatter = logging.Formatter('[%(asctime)s] [%(levelname)s] %(message)s', datefmt='%Y-%m-%d %H:%M:%S')

# –§–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
os.makedirs(LOG_DIR, exist_ok=True)
file_handler = logging.FileHandler(LOG_PATH, mode='a', encoding='utf-8')
file_handler.setFormatter(formatter)
logger.addHandler(file_handler)

# –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
console_handler = logging.StreamHandler(sys.stdout)
console_handler.setFormatter(formatter)
logger.addHandler(console_handler)
# --- –ö–æ–Ω–µ—Ü –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---
def main():
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –≤–æ—Ä–∫—Ñ–ª–æ—É —Å–∏—Å—Ç–µ–º—ã HPI.
    –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏ –∏–Ω–∂–µ–∫—Ç–æ—Ä –≤ –æ–¥–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ.
    """
    logging.info("--- üöÄ –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã HPI (–µ–¥–∏–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å) ---")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
        if not os.getenv("OPENAI_API_KEY"):
            logging.warning("OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –ø—Ä—è–º–æ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã–º–∏, —á—Ç–æ sys.path —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω
        from src.calculator import run_calculator
        from src.dashboard.injector import DashboardInjector
        
        logging.info("–®–∞–≥ 1: –ó–∞–ø—É—Å–∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –º–µ—Ç—Ä–∏–∫...")
        run_calculator()
        logging.info("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")

        logging.info("–®–∞–≥ 2: –ó–∞–ø—É—Å–∫ –∏–Ω–∂–µ–∫—Ç–æ—Ä–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è PRO-–¥–∞—à–±–æ—Ä–¥–∞...")
        injector = DashboardInjector(version=APP_VERSION)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∞—à–±–æ—Ä–¥
        dashboard_path = injector.inject(save_draft=False)
        logging.info(f"–î–∞—à–±–æ—Ä–¥ –æ–±–Ω–æ–≤–ª–µ–Ω: {dashboard_path}")

    except ImportError as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ 'src'. –û—à–∏–±–∫–∞: {e}")
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ: {e}", exc_info=True)

    logging.info("--- ‚úÖ –°–∏—Å—Ç–µ–º–∞ HPI –∑–∞–≤–µ—Ä—à–∏–ª–∞ —Ä–∞–±–æ—Ç—É ---")

if __name__ == "__main__":
    main() 